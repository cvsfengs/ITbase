//问题：
//错选：
//答案：
//原因：
//解析：
视图包含下列结构是不可以更新的 
1：集合运算符 union，union all, intersect，minus 
2：distinct关键字 
3：group by,order by,connect by,或者start with ; 分组函数
4：子查询 
5：需要更新的列不是视图定义的 
6：具有连接查询(可以更新键值保存表的数据) 
7：违反基表的约束条件；连接视图是指基于多表连接查询创建的视图（一般不容易修改，但通用instead of触发器可以实现修改的功能）


//知识点：
组合查询Union,如
select user_id,user_nickname,user_status from yy_user where user_status = 1 
一 UNION (类似OR)
select user_id,user_nickname,user_status from yy_user where user_id > 3
1)Union必须由两条或者两条以上的SELECT语句组成，语句之间使用Union链接
2)Union中的每个查询必须包含相同的列、表达式或者聚合函数，他们出现的顺序可以不一致（这里指查询字段相同，表不一定一样）
3)列的数据类型必须兼容，兼容的含义是必须是数据库可以隐含的转换他们的类型
二 INTERSECT (类似AND)
1)将两个 SELECT 语句结合在一起，只返回第一个 SELECT 语句的结果中与第二个 SELECT 语句的结果中的记录完全相同的那些记录
三GROUP BY
1)GROUP BY 语句用于结合合计函数，根据一个或多个列对结果集进行分组



//问题：在数据库与宿主语言之间传递信息是通过（）
//错选：系统缓冲区
//答案：局部变量
//原因：没有解答，题意中的“传递”想表达在代码段中怎么得到数据库的数据
//解析：
//知识点：



//问题：概念结构设计阶段得到的结果是__
//错选：数据字典描述的数据需求
//答案：E-R图表示的概念模型
//原因：
//解析：
//知识点：



//问题：一级封锁协议能解决的问题是（ ）？
//错选：读脏数据
//答案：丢失修改
//原因：
一级封锁协议是：事务T在修改数据R之前必须先对其加X锁，直到事务结束才释放。事务结束包括正常结束（COMMIT）和非正常结束（ROLLBACK）。
一级封锁协议可以防止丢失修改，并保证事务T是可恢复的。使用一级封锁协议可以解决丢失修改问题。
二级封锁协议是：一级封锁协议加上事务T在读取数据R之前必须先对其加S锁，读完后方可释放S锁。
二级封锁协议除防止了丢失修改，还可以进一步防止读“脏”数据。但在二级封锁协议中，由于读完数据后即可释放S锁，所以它不能保证可重复读。


//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：



//问题：
//错选：
//答案：
//原因：
//解析：
//知识点：
